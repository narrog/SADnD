// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SADnD.Server.Data;
using System;

namespace SADnD.Server.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseSerialColumns() // PostgreSQL Äquivalent zu Identity Columns
                .HasAnnotation("Relational:MaxIdentifierLength", 63) // PostgreSQL Standard-Maximallänge für Identifier
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20417.2");

            modelBuilder.Entity("SADnD.Server.Models.ApplicationUser", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("varchar(450)"); // Ändert von nvarchar zu varchar

                b.Property<int>("AccessFailedCount")
                    .HasColumnType("int");

                b.Property<string>("ConcurrencyStamp")
                    .IsConcurrencyToken()
                    .HasColumnType("text"); // Ändert von nvarchar(max) zu text

                b.Property<string>("Email")
                    .HasMaxLength(256)
                    .HasColumnType("varchar(256)"); // Ändert von nvarchar zu varchar

                b.Property<bool>("EmailConfirmed")
                    .HasColumnType("boolean"); // Ändert von bit zu boolean

                b.Property<bool>("LockoutEnabled")
                    .HasColumnType("boolean"); // Ändert von bit zu boolean

                b.Property<DateTimeOffset?>("LockoutEnd")
                    .HasColumnType("timestamptz"); // Ändert von datetimeoffset zu timestamptz

                b.Property<string>("NormalizedEmail")
                    .HasMaxLength(256)
                    .HasColumnType("varchar(256)");

                b.Property<string>("NormalizedUserName")
                    .HasMaxLength(256)
                    .HasColumnType("varchar(256)");

                b.Property<string>("PasswordHash")
                    .HasColumnType("text"); // Ändert von nvarchar(max) zu text

                b.Property<string>("PhoneNumber")
                    .HasColumnType("text"); // Ändert von nvarchar(max) zu text

                b.Property<bool>("PhoneNumberConfirmed")
                    .HasColumnType("boolean"); // Ändert von bit zu boolean

                b.Property<string>("SecurityStamp")
                    .HasColumnType("text"); // Ändert von nvarchar(max) zu text

                b.Property<bool>("TwoFactorEnabled")
                    .HasColumnType("boolean"); // Ändert von bit zu boolean

                b.Property<string>("UserName")
                    .HasMaxLength(256)
                    .HasColumnType("varchar(256)");

                b.HasKey("Id");

                b.HasIndex("NormalizedEmail")
                    .HasDatabaseName("EmailIndex");

                b.HasIndex("NormalizedUserName")
                    .IsUnique()
                    .HasDatabaseName("UserNameIndex");

                b.ToTable("AspNetUsers");
            });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.DeviceFlowCodes", b =>
            {
                b.Property<string>("UserCode")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.Property<string>("ClientId")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.Property<DateTime>("CreationTime")
                    .HasColumnType("timestamp"); // Ändert von datetime2 zu timestamp

                b.Property<string>("Data")
                    .IsRequired()
                    .HasMaxLength(50860)
                    .HasColumnType("text"); // Ändert von nvarchar(max) zu text

                b.Property<string>("Description")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.Property<string>("DeviceCode")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.Property<DateTime?>("Expiration")
                    .IsRequired()
                    .HasColumnType("timestamp"); // Ändert von datetime2 zu timestamp

                b.Property<string>("SessionId")
                    .HasMaxLength(100)
                    .HasColumnType("varchar(100)");

                b.Property<string>("SubjectId")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.HasKey("UserCode");

                b.HasIndex("DeviceCode")
                    .IsUnique();

                b.HasIndex("Expiration");

                b.ToTable("DeviceCodes");
            });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.Key", b =>
            {
                b.Property<string>("Id")
                    .HasMaxLength(450)
                    .HasColumnType("varchar(450)");

                b.Property<string>("Algorithm")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("varchar(100)");

                b.Property<DateTime>("Created")
                    .HasColumnType("timestamp"); // Ändert von datetime2 zu timestamp

                b.Property<string>("Data")
                    .IsRequired()
                    .HasColumnType("text"); // Ändert von nvarchar(max) zu text

                b.Property<bool>("DataProtected")
                    .HasColumnType("boolean"); // Ändert von bit zu boolean

                b.Property<bool>("IsX509Certificate")
                    .HasColumnType("boolean"); // Ändert von bit zu boolean

                b.Property<string>("Use")
                    .HasMaxLength(450)
                    .HasColumnType("varchar(450)");

                b.Property<int>("Version")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.HasIndex("Use");

                b.ToTable("Keys");
            });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.PersistedGrant", b =>
            {
                b.Property<string>("Key")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.Property<string>("ClientId")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.Property<DateTime?>("ConsumedTime")
                    .HasColumnType("timestamp"); // Ändert von datetime2 zu timestamp

                b.Property<DateTime>("CreationTime")
                    .HasColumnType("timestamp"); // Ändert von datetime2 zu timestamp

                b.Property<string>("Data")
                    .IsRequired()
                    .HasMaxLength(50860)
                    .HasColumnType("text"); // Ändert von nvarchar(max) zu text

                b.Property<string>("Description")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.Property<DateTime?>("Expiration")
                    .HasColumnType("timestamp"); // Ändert von datetime2 zu timestamp

                b.Property<string>("SessionId")
                    .HasMaxLength(100)
                    .HasColumnType("varchar(100)");

                b.Property<string>("SubjectId")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.Property<string>("Type")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("varchar(50)");

                b.HasKey("Key");

                b.HasIndex("ConsumedTime");

                b.HasIndex("Expiration");

                b.HasIndex("SubjectId", "ClientId", "Type");

                b.HasIndex("SubjectId", "SessionId", "Type");

                b.ToTable("PersistedGrants");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("varchar(450)");

                b.Property<string>("ConcurrencyStamp")
                    .IsConcurrencyToken()
                    .HasColumnType("text"); // Ändert von nvarchar(max) zu text

                b.Property<string>("Name")
                    .HasMaxLength(256)
                    .HasColumnType("varchar(256)");

                b.Property<string>("NormalizedName")
                    .HasMaxLength(256)
                    .HasColumnType("varchar(256)");

                b.HasKey("Id");

                b.HasIndex("NormalizedName")
                    .IsUnique()
                    .HasDatabaseName("RoleNameIndex");

                b.ToTable("AspNetRoles");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseSerialColumn(); // PostgreSQL Äquivalent zu Identity Column

                b.Property<string>("ClaimType")
                    .HasColumnType("text"); // Ändert von nvarchar(max) zu text

                b.Property<string>("ClaimValue")
                    .HasColumnType("text"); // Ändert von nvarchar(max) zu text

                b.Property<string>("RoleId")
                    .IsRequired()
                    .HasColumnType("varchar(450)");

                b.HasKey("Id");

                b.HasIndex("RoleId");

                b.ToTable("AspNetRoleClaims");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseSerialColumn(); // PostgreSQL Äquivalent zu Identity Column

                b.Property<string>("ClaimType")
                    .HasColumnType("text"); // Ändert von nvarchar(max) zu text

                b.Property<string>("ClaimValue")
                    .HasColumnType("text"); // Ändert von nvarchar(max) zu text

                b.Property<string>("UserId")
                    .IsRequired()
                    .HasColumnType("varchar(450)");

                b.HasKey("Id");

                b.HasIndex("UserId");

                b.ToTable("AspNetUserClaims");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
            {
                b.Property<string>("LoginProvider")
                    .HasMaxLength(128)
                    .HasColumnType("varchar(128)");

                b.Property<string>("ProviderKey")
                    .HasMaxLength(128)
                    .HasColumnType("varchar(128)");

                b.Property<string>("ProviderDisplayName")
                    .HasColumnType("text"); // Ändert von nvarchar(max) zu text

                b.Property<string>("UserId")
                    .IsRequired()
                    .HasColumnType("varchar(450)");

                b.HasKey("LoginProvider", "ProviderKey");

                b.HasIndex("UserId");

                b.ToTable("AspNetUserLogins");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
            {
                b.Property<string>("UserId")
                    .HasColumnType("varchar(450)");

                b.Property<string>("RoleId")
                    .HasColumnType("varchar(450)");

                b.HasKey("UserId", "RoleId");

                b.HasIndex("RoleId");

                b.ToTable("AspNetUserRoles");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
            {
                b.Property<string>("UserId")
                    .HasColumnType("varchar(450)");

                b.Property<string>("LoginProvider")
                    .HasMaxLength(128)
                    .HasColumnType("varchar(128)");

                b.Property<string>("Name")
                    .HasMaxLength(128)
                    .HasColumnType("varchar(128)");

                b.Property<string>("Value")
                    .HasColumnType("text"); // Ändert von nvarchar(max) zu text

                b.HasKey("UserId", "LoginProvider", "Name");

                b.ToTable("AspNetUserTokens");
            });
#pragma warning restore 612, 618
        }
    }
}
