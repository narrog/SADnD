@inject CampaignApiManager campaignManager
@inject JoinRequestApiManager joinRequestManager
@inject IJSRuntime js

<div class="container-fluid mt-3">
    <div class="row">
        @if (campaigns != null) {
            @foreach (Campaign campaign in campaigns) {
                <div class="col-12 col-md-4 p-1 d-flex" style="cursor: pointer;">
                    <div class="p-2 bg-dark text-light w-100" @onclick="() => OpenCampaignDetails(campaign.Id)">
                        <h4>@campaign.Name</h4>
                        <p>Zugangscode: @campaign.Id</p>
                        <div class="d-none d-md-block">
                            @if (campaign.DungeonMasters != null && campaign.DungeonMasters.Any()) {
                                <p>
                                    DungeonMaster
                                    <ul>
                                        @foreach (var master in campaign.DungeonMasters) {
                                            @if (master.UserName != null) {
                                                <li>
                                                    @master.UserName
                                                </li>
                                            }
                                        }
                                    </ul>
                                </p>
                            }
                            else {
                                <p>Kein DungeonMaster</p>
                            }
                            @if (campaign.Players != null && campaign.Players.Any()) {
                                <p>
                                    Spieler
                                    <ul>
                                        @foreach (var player in campaign.Players)
                                        {
                                            @if (player.UserName != null)
                                            {
                                                <li>
                                                    @player.UserName
                                                </li>
                                            }
                                        }
                                    </ul>
                                </p>
                            }
                        </div>
                    </div>
                </div>
            }
            
        }
        <div class="mt-2 p-1">
            <a class="btn btn-primary me-2" href="new-campaign">hinzufügen</a>
            <a class="btn btn-primary me-2" href="join-campaign">beitreten</a>
            @if (!ShowAll) {
                <a href="/all-campaigns" class="btn btn-primary">Alle anzeigen</a>
            }
        </div>
    </div>
</div>
<div class="container-fluid mt-3">
    @if(joinRequests != null && joinRequests.Any()) {
        <div class="row mt-5">
            <h4>Offene Anfragen</h4>
            <table class="table table-sm table-hover table-striped align-middle">
                <tbody>
                    @foreach (var request in joinRequests) {
                        <tr>
                            <td>@request.CampaignId</td>
                            @if (request.User != null) {
                                <td>@request.User.UserName</td>
                            }
                            <td>
                                
                                @if(request.UserId == appState.UserId) {
                                    <button class="btn btn-outline-danger me-2" @onclick="() => JoinRequestReject(request)">Abbrechen</button>
                                }
                                else {
                                    <button class="btn btn-outline-danger me-2" @onclick="() => JoinRequestReject(request)">Ablehnen</button>
                                    <button class="btn btn-outline-primary me-2" @onclick="() => JoinRequestAccept(request)">Annehmen</button>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    @if (!string.IsNullOrEmpty(UIMessage)) {
        <p>@UIMessage</p>
    }
</div>


@code {
    [CascadingParameter]
    public CascadingAppState appState { get; set; }
    [Parameter] public bool ShowAll { get; set; }
    string controllerName = "campaign";
    private IEnumerable<Campaign>? campaigns;
    public IEnumerable<JoinRequest>? joinRequests;
    private string UIMessage = "";

    protected override async Task OnInitializedAsync() {
        await GetAllCampaigns();
        await GetOpenJoinRequests();
        if (campaigns != null) {
            if (!ShowAll) {
                campaigns = campaigns.Count() < 3 ? campaigns.Take(campaigns.Count()) : campaigns.Take(3);
            }
        }
    }

    private async Task GetAllCampaigns() {
        campaigns = (await campaignManager.GetAll()).OrderBy(x => x.Name);
    }

    private async Task GetOpenJoinRequests() {
        joinRequests = (await joinRequestManager.GetAll()).OrderBy(x => x.CampaignId);
        joinRequests = joinRequests.Where(x => x.Accepted == null);
    }
    private async void JoinRequestReject(JoinRequest joinRequest) {
        if (joinRequest != null) {
            if (appState.UserId.Equals(joinRequest.UserId)) {
                await joinRequestManager.Delete(joinRequest.Id);
                UIMessage = "Beitrittsanfrage entfernt";
            }
            else {
                await joinRequestManager.Delete(joinRequest.Id);
                UIMessage = "Beitrittsanfrage abgelehnt";
            }
            await GetOpenJoinRequests();
        }
        StateHasChanged();
    }
    private async Task JoinRequestAccept(JoinRequest joinRequest) {

        if (joinRequest != null) {
            joinRequest.Accepted = DateTime.UtcNow;
            joinRequest.User = null;
            await joinRequestManager.Update(joinRequest);
            UIMessage = "Beitrittsanfrage akzeptiert";
            await GetOpenJoinRequests();
        }
        StateHasChanged();
    }

    private void OpenCampaignDetails(string id) {
        navManager.NavigateTo($"campaign-details/{id}");
    }
}
