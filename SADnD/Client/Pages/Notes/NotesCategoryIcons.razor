@using SADnD.Client.Pages.CharacterPages

@if (!ViewTypeIsDM) {
    <div class="@GetCategoryClass("inventory")" @onclick='() => ChangeView("inventory")'>
        <i class="bi bi-backpack3"></i> <span class="d-none d-md-block">Inventar</span>
    </div>
}
<div class="@GetCategoryClass("story")" @onclick='() => ChangeView("story")'>
    <i class="bi bi-journal-text"></i> <span class="d-none d-md-block">Story</span>
</div>
<div class="@GetCategoryClass("people")" @onclick='() => ChangeView("people")'>
    <i class="bi bi-people"></i> <span class="d-none d-md-block">Personen</span>
</div>
<div class="@GetCategoryClass("locations")" @onclick='() => ChangeView("locations")'>
    <i class="bi bi-pin-map-fill"></i> <span class="d-none d-md-block">Orte</span>
</div>
@if (!ViewTypeIsDM) {
    <div class="@GetCategoryClass("quest")" @onclick='() => ChangeView("quest")'>
        <i class="bi bi-chat-square-dots"></i> <span class="d-none d-md-block">Quests</span>
    </div>
    <div class="@GetCategoryClass("hints")" @onclick='() => ChangeView("hints")'>
        <i class="bi bi-lightbulb"></i> <span class="d-none d-md-block">Hinweise</span>
    </div>
}

@code {
    [CascadingParameter]
    private CascadingAppState appState { get; set; }
    [CascadingParameter]
    public NotesCategoryParent Context { get; set; }
    [Parameter]
    public required string ActiveCategory { get; set; }
    [Parameter]
    public EventCallback<string> ActiveCategoryChanged { get; set; }
    [Parameter]
    public EventCallback OnCategoryChanged { get; set; }
    [Parameter]
    public bool ViewTypeIsDM { get; set; }
    [Parameter]
    public int CharacterId { get; set; }
    [Parameter]
    public string? CampaignId { get; set; }

    private async Task ChangeView(string category)
    {
        await ActiveCategoryChanged.InvokeAsync(category);
        await OnCategoryChanged.InvokeAsync();
    }
    private string GetCategoryClass(string category)
    {
        try
        {
            bool Matches(Note note) =>
                    ViewTypeIsDM ? note.CampaignId == CampaignId : note.CharacterId == CharacterId;

            bool categoryHasNotes = category switch
            {
                "inventory" => true,
                "story" => appState.Notes.Any(note => note is NoteStory && Matches(note)),
                "people" => appState.Notes.Any(note => note is NotePerson && Matches(note)),
                "locations" => appState.Notes.Any(note => note is NoteLocation && Matches(note)),
                "quest" => appState.Notes.Any(note => note is NoteQuest && Matches(note)),
                "hints" => appState.Notes.Any(note => note is NoteHint && Matches(note)),
                _ => false
            };

            return ActiveCategory == category
                ? "ps-0 ps-md-2 my-1 text-center text-md-start bg-light text-dark border"
                : $"ps-0 ps-md-2 my-1 text-center text-md-start bg-dark text-light {categoryHasNotes}";
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            return "ps-0 ps-md-2 my-1 text-center text-md-start bg-dark text-light";
        }
    }

}
