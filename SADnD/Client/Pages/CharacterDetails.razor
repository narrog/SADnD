@page "/character-details/{id}"
@attribute [Authorize]
@inject CharacterManager characterManager
@inject IJSRuntime js

<h3>Charakter "@character.Name" - Details</h3>

<div class="container-fluid mt-3">
</div>
<div>
    <button class="btn btn-outline-danger" @onclick="DeleteCharacter">Löschen</button>
</div>

@code {
    [Parameter] public required string Id { get; set; }
    private Character character = new Character();

    protected override async Task OnInitializedAsync() {
        character = await characterManager.GetByID(Id);
    }

    private async Task DeleteCharacter() {
        // string toDeleteName = character.Name;
        // bool confirm = await js.InvokeAsync<bool>("confirm", $"Soll der Eintrag '{toDeleteName}' wirklich gelöscht werden?");
        // if (!confirm) return;

        await js.InvokeVoidAsync("alert", "Funktion wird später implementiert");
        //await characterManager.Delete(character.Id);
    }
}
